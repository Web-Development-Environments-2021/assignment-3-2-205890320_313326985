openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
tags:
  - name: Users
  - name: Auth
  - name: Teams
  - name: Matches
  - name: UnionAgent
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
            # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /league/getDetails:
    get:
      tags:
        - League
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/League"
        "400":
          description: wrong input parameters
  /users/favoriteMatches:
    get:
      tags:
        - Users
      summary: Return the favorite matches that were saved by user
      responses:
        "200":
          description: data about the user's favorites matches returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FutureMatchPreview"
        "401":
          description: user is not authorized
        "204":
          description: This user does not have any favorite matches
    post:
      summary: save match in the favorites list of a user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                match_id:
                  type: int
                  description: match's id which the user saved
                  example: 85
      responses:
        "201":
          description: The match successfully saved as favorite
        "401":
          description: user is not authorized
        "409":
          description: match already in favorites
  /teams/teamFullDetails/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
            example: 53
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: teamId does not exist
  /players/playerFullDetails/{playerId}:
    get:
      summary: get full deatils about a player
      description: useful for player page
      tags:
      - Players
      parameters:
        - in: path
          name: playerId
          description: player's id
          required: true
          schema:
            type: integer
            example: 172104
      responses:
        "200":
          description: data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "404":
          description: playerId does not exist
  /UnionAgent:
    get:
      tags:
        - UnionAgent
      summary: get all matches in the league
      parameters: 
      - name: "sort"
        in: "query"
        description: "type of sorting"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
              - "Date"
              - "Teams"
              - "none"
            default: "none"
        example: "Teams"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchPreview'
        "401":
          description: "You have not authenticated yet, please sign in"
        "400":
          description: "Wrong sort type"
  /UnionAgent/UpdateRefereeMatch:
    put:
      tags:
      - UnionAgent
      summary: Connect a referee to a match
      parameters:
      - name: referee_id
        in: query
        required: true
        schema:
          type: integer
        example: 1854
      - name: match_id
        in: query
        required: true
        schema:
          type: integer
        example: 19246
      responses:
        "201":
          description: successful operation
        "400":
          description: Bad request
        "401":
          description: You have not authenticated yet, please sign in
  /UnionAgent/addEventsLog:
    post:
      tags:
      - UnionAgent
      summary: add events log to past match in system
      parameters:
      - name: match_id
        in: query
        description: ID of past match
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 16475
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Event'
        required: true
      responses:
        "201":
          description: successful operation
        "400":
          description: Bad request
        "401":
          description: You have not authenticated yet, please sign in
  /UnionAgent/UpdateResultsMatch:
    put:
      tags:
      - UnionAgent
      summary: Update match results in past match to system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchPreview'
        required: true
      responses:
        "201":
          description: successful operation
        "400":
          description: Bad request
        "401":
          description: You have not authenticated yet, please sign in
    get:
      tags:
      - UnionAgent
      summary: show all matches played to add results  
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FutureMatchPreview'
        "401":
          description: You have not authenticated yet, please sign in
        "400":
          description: "Bad request"
  /UnionAgent/addMatch:  
    post:
      tags:
      - UnionAgent
      summary: add new match to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchPreview'
        required: true
      responses:
        "201":
          description: successful operation
        "401":
          description: You have not authenticated yet, please sign in
        "400":
          description: "Bad request" 
    get:
      tags:
      - UnionAgent
      summary: show all the data that needed to add match
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Team id
                          example: 53
                        name:
                          type: string
                          description: Team name
                          example: "Celtic"
                  venues:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Venue id
                          example: 8909
                        name:
                          type: string
                          description: Venue name
                          example: "Celtic Park"
                  referees:
                    type: array
                    items:
                      $ref: '#/components/schemas/Referee'
        "401":
          description: You have not authenticated yet, please sign in
        "400":
          description: "Bad request"

  /search/Teams:
    get:
      tags:
      - Search
      summary: Search for teams by name
      parameters:
      - name: query
        in: query
        description: The query we want to search
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: Midtjylland
      - name: sort
        in: query
        description: type of sort
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: none
            enum:
            - asc
            - desc
            - none
        example: asc
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchTeams'
        "204":
          description: There is no content to send for this request
        "401":
          description: You have not authenticated yet, please sign in
        "404":
          description: The server can not find the requested resource
  /search/Players:
    get:
      tags:
      - Search
      summary: Search for players by name
      parameters:
      - name: query
        in: query
        description: The query we want to search
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: David
      - name: sort
        in: query
        description: type of sort
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: none
            enum:
            - player name
            - team name
            - none
        example: player name
      - name: filter
        in: query
        description: how to filter results, can be done by position of player or by team name
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: none
            enum:
            - team name
            - player's position
            - none
        example: player's position
      - name: filter query
        in: query
        description: which value do you want to be in the filter
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 3
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerPreview'
        "204":
          description: There is no content to send for this request
        "401":
          description: You have not authenticated yet, please sign in
        "404":
          description: The server can not find the requested resource

  /matches/pastMatches:
    get:
      tags:
      - Matches
      summary: Search for past matches with 3 or more eventlogs
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchPreview'
        "204":
          description: There is no content to send for this request
        "401":
          description: You have not authenticated yet, please sign in

  /matches/futureMatches:
    get:
      tags:
      - Matches
      summary: Search for future matches
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FutureMatchPreview'
        "204":
          description: There is no content to send for this request
        "401":
          description: You have not authenticated yet, please sign in
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: ladygaga
        firstname:
          type: string
          description: user's first name
          example: Stefani
        lastname:
          type: string
          description: user's last name
          example: Germanotta
        country:
          type: string
          description: user's country
          example: USA
        password:
          maxLength: 10
          minLength: 5
          type: string
          description:
            password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: lady@56
        email:
          pattern: email
          type: string
          description: user's email
          example: ladygaga@gmail.com
        image_url:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: naorbe
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char
          example: naor@55
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        next_match_planned:
          type: object
          description: the next match scheduled for the league
          $ref: '#/components/schemas/FutureMatchPreview'
    PlayerPreview:
      type: object
      properties:
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        id:
          type: integer
          description: 172923
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: København
    Player:
      type: object
      properties:
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: København
        common name:
          type: string
          example: J. Forrest
        nationality:
          type: string
          example: Scotland
        birth date:
          pattern: ^\d{2}/\d{2}/\d{4}$
          type: string
          example: 07/07/1991
        birth country:
          type: string
          example: Scotland
        height:
          type: string
          example: 175 cm
        weight:
          type: string
          example: 75 kg
    MatchPreview:
      type: object
      properties:
        match_id:
          type: integer
          example: 53
        date_time:
          type: string
          format: date-time
          example: "2021-08-02 15:30:00"
        local_team_id:
          type: integer
          example: 53
        local_team_name:
          type: string
          example: "Celtic"
        visitor_team_id:
          type: integer
          example: 338
        visitor_team_name:
          type: string
          example: "Hamilton Academical"
        venue_id:
          type: integer
          example: 8909
        venue_name:
          type: string
          example: "Celtic Park"
        referee_id:
          type: integer
          example: 89
        home_goals:
          type: integer
          example: 5
        away_goals:
          type: integer
          example: 3
    FutureMatchPreview:
      type: object
      properties:
        match_id:
          type: integer
          example: 53
        date_time:
          type: string
          format: date-time
          example: "2021-08-02 15:30:00"
        local_team_id:
          type: integer
          example: 53
        local_team_name:
          type: string
          example: "Celtic"
        visitor_team_id:
          type: integer
          example: 338
        visitor_team_name:
          type: string
          example: "Hamilton Academical"
        venue_id:
          type: integer
          example: 8909
        venue_name:
          type: string
          example: "Celtic Park" 
    Team:
      type: object
      properties:
        team name:
          type: string
          description: team name
          example: København
        logo path:
          type: string
          format: URL
          description: logo path
          example: https://cdn.sportmonks.com/images//soccer/teams/11/939.png
        players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"
        team's past matches:
          type: array
          items:
            $ref: '#/components/schemas/MatchPreview'
        team's future matches:
          type: array
          items:
            $ref: '#/components/schemas/FutureMatchPreview'
    Event:
      type: object
      properties:
        date_and_time_happend:
          type: string
          format: date-time
          example: "2020-08-02 15:30:00"
        minute:
          type: integer
          example: 17
        type:
          type: string
          example: Yellow Card
        description:
          type: string
          example: to Messi
    SearchTeams:
      type: object
      properties:
        team name:
          type: string
          example: Midtjylland
        logo path:
          type: string
          format: URL
          example: https://cdn.sportmonks.com/images//soccer/teams/11/939.png
    Referee:
      type: object
      properties:
        id:
          type: integer
          example: 2
        firstname:
          type: string
          example: "Liad"
        lastname:
          type: string
          example: "Nachshon"
        course:
          type: string
          example: Regular

      
